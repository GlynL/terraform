name: CI/CD Pipeline for Terraform and Deployment

on:
  push:
    branches:
      - main # Trigger deployment on push to the main branch

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS credentials using GitHub Secrets
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 # Change to the desired AWS region

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.4.0" # Set the version of Terraform you want to use

      # Terraform initialization and plan
      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        env:
          TF_VAR_ssh_key_public: ${{ secrets.SSH_KEY_PUBLIC }}
        run: terraform plan -input=false

      # Apply Terraform configuration to provision or update the infrastructure
      - name: Terraform Apply
        env:
          TF_VAR_ssh_key_public: ${{ secrets.SSH_KEY_PUBLIC }}
        run: terraform apply -auto-approve

      - name: Save ec2 tst ip
        id: ec2_ip_test
        run: echo "$(terraform output -raw instance_public_ip)

      - name: Save ec2 ip
        id: ec2_ip
        run: echo "EC2_IP=$(terraform output -raw instance_public_ip)" >> $GITHUB_OUTPUT

  deploy:
    needs: terraform # This ensures the deployment happens after the Terraform job
    runs-on: ubuntu-latest

    steps:
      # Set up the SSH private key
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Add EC2 server IP to known hosts to avoid prompts
      - name: Add server to known hosts
        run: ssh-keyscan -H ${{ steps.ec2_ip.outputs.EC2_IP }} >> ~/.ssh/known_hosts

      # SSH into the server and execute commands
      - name: SSH into EC2 server
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ steps.ec2_ip.outputs.EC2_IP }} << 'EOF'
          echo "Connected to EC2 server"
          # Add any commands you want to run here
          EOF
